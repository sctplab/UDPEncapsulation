<?xml version="1.0"?>
<!DOCTYPE rfc SYSTEM "rfc2629.dtd">
<?rfc toc="yes"?>
<?rfc compact="yes" ?>
<?rfc subcompact="no" ?>
<?rfc strict="yes" ?>

<rfc category="std"
     ipr="trust200902"
     docName="draft-tuexen-tsvwg-sctp-udp-encaps-cons-01-to-be.txt"
     updates="6951">
<front>
<title abbrev="Additional Considerations for SCTP over UDP">
Additional Considerations for UDP Encapsulation of Stream Control Transmission
Protocol (SCTP) Packets</title>


<!-- ************** MICHAEL TUEXEN *************** -->
<author initials="M." surname="Tuexen" fullname="Michael Tuexen">
<organization abbrev='Muenster Univ. of Appl. Sciences'>
              Muenster University of Applied Sciences</organization>
<address>
    <postal>
        <street>Stegerwaldstrasse 39</street>
        <city>48565 Steinfurt</city>
        <country>Germany</country>
    </postal>
    <email>tuexen@fh-muenster.de</email>
</address>
</author>

<!-- *************** RANDALL STEWART *************** -->
<author initials="R. R." surname="Stewart" fullname="Randall R. Stewart">
<organization>Netflix, Inc.</organization>
<address>
    <postal>
        <street></street>
        <city>Chapin</city>
        <region>SC</region>
        <code>29036</code>
        <country>United States</country>
    </postal>
    <email>randall@lakerest.net</email>
</address>
</author>

<date  />

<abstract>
<t>RFC 6951 specifies the UDP encapsulation of SCTP packets.
The described handling of received packets requires the check of the
verification tag. However, RFC 6951 misses a specification for the
handling of received packets for which this check is not possible.</t>
<t>This document updates RFC 6951 by specifying the handling of received
packets where the verification tag can not be checked.</t>
</abstract>
</front>

<middle>
<section anchor='intro'
         title='Introduction'>
<t><xref target="RFC6951"/> specifies the UDP encapsulation of SCTP packets.
To be able to adopt automatically to changes of the remote UDP encapsulation
port number, it is updated automatically when processing received packets.
This includes automatic enabling and disabling of UDP encapsulation.</t>
<t>Section 5.4 of <xref target="RFC6951"/> describes the processing of 
received packets and requires the check of the verification tag before
updating the remote UDP encapsulation port and the possible enabling or
disabling of UDP encapsulation.</t>
<t><xref target="RFC6951"/> basically misses a description for the handling
of received packets where this verification tag check is not possible.
This includes packets for which no association can be found and
packets containing an INIT chunk, since the verification tag for these
packets must be 0.</t>
</section>

<section anchor='conventions'
         title='Conventions'>
<t>The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD",
"SHOULD NOT", "RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be
interpreted as described in <xref target="RFC2119"/>.</t>
</section>

<section title='Handling of Out of the Blue Packets'>
<t>If the processing of an out of the blue packet requires the sending
of a packet in response according to the rules specified in Section 8.4 of
<xref target="RFC4960"/>, the following rules apply:
<list style='numbers'>
<t>If the received packet was encapsulated in UDP, the response packets
MUST also be encapsulated in UDP.
The UDP source port and UDP destination port used for sending the response
packet are the UDP destination port and UDP source port of the received
packet.</t>
<t>If the receive packet was not encapsulated in UDP, the response packet
MUST NOT be encapsulated in UDP.</t>
</list>
Please not that in these cases a check of the of the verification tag is not
possible.</t>
</section>

<section title='Handling of SCTP Packets Containing an INIT Chunk Matching an
                Existing Association'>
<t>SCTP packets containing an INIT chunk have the verification tag 0 in
the common header. Therefore the verification can't be checked.</t>
<t>The following rules apply when processing the received packet:
<list style='numbers'>
<t>The remote UDP encapsulation port for the source address of the received
SCTP packet MUST NOT be updated if the encapsulation of outgoing packets is
enabled and the received SCTP packet is encapsulated.</t>
<t>The UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet MUST NOT be enabled, if it is disabled and the
received SCTP packet is encapsulated.</t>
<t>The UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet MUST NOT be disabled, if it is enabled
and the received SCTP packet is not encapsulated.</t>
<t>If the UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet is disabled and the received SCTP packet is
encapsulated, an SCTP packet containing an ABORT chunk MUST be sent.
The ABORT chunk MAY include the error cause defined below indicating an
"Restart of an Association with New Encapsulation Port".
This packet containing the ABORT chunk MUST be encapsulated in UDP.
The UDP source port and UDP destination port used for sending the
packet containing the ABORT chunk are the UDP destination port and
UDP source port of the received packet containing the INIT chunk.</t>
<t>If the UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet is disabled and the received SCTP packet is
not encapsulated, the processing defined in <xref target="RFC4960"/>
MUST be performed. If a packet is sent in response, it MUST NOT be
encapsulated.</t>
<t>If the UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet is enabled and the received SCTP packet is not
encapsulated, an SCTP packet containing an ABORT chunk MUST be sent.
The ABORT chunk MAY include the error cause defined below indicating an
"Restart of an Association with New Encapsulation Port".
This packet containing the ABORT chunk MUST NOT be encapsulated in UDP.</t>
<t>If the UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet is enabled and the received SCTP packet is
encapsulated, but the UDP source port of the received SCTP packet is not
equal to the remote UDP encapsulation port for the source address of the
received SCTP packet, an SCTP packet containing an ABORT chunk MUST be sent.
The ABORT chunk MAY include the error cause defined below indicating an
"Restart of an Association with New Encapsulation Port".
This packet containing the ABORT chunk MUST be encapsulated in UDP.
The UDP source port and UDP destination port used for sending the
packet containing the ABORT chunk are the UDP destination port and
UDP source port of the received packet containing the INIT chunk.</t>
<t>If the UDP encapsulation for outgoing packets towards the source address
of the received SCTP packet is enabled and the received SCTP packet is
encapsulated and the UDP source port of the received SCTP packet is
equal to the remote UDP encapsulation port for the source address of the
received SCTP packet, the processing defined in <xref target="RFC4960"/>
MUST be performed. If a packet is sent in response, it MUST be
encapsulated.
The UDP source port and UDP destination port used for sending the
packet containing the ABORT chunk are the UDP destination port and
UDP source port of the received packet containing the INIT chunk.</t>
</list></t>

<t>The error cause indicating an
"Restart of an Association with New Encapsulation Port" is defined bytes
the following figure.</t>
<figure>
<artwork>
 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1 2 3 4 5 6 7 8 9 0 1
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|        Cause Code = 14        |       Cause Length = 8        |
+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+-+
|   Current Encapsulation Port  |     New Encapsulation Port    |
+-------------------------------+-------------------------------+
</artwork>
</figure>
<t><list style='hanging'>
<t hangText='Cause Code: 2 bytes (unsigned integer)'>
<vspace blankLines='0'/>
This field MUST hold the IANA defined error cause code for the
"Restart of an Association with New Encapsulation Port" error cause.
The suggested value of this field for IANA is 14.</t>
<t hangText='Cause Length: 2 bytes (unsigned integer)'>
<vspace blankLines='0'/>
This field holds the length in bytes of the error cause;
the value MUST be 8.</t>
<t hangText='Current Encapsulation Port: 2 bytes (unsigned integer)'>
<vspace blankLines='0'/>
This field holds the remote encapsulation port currently being used
for the destination address the received packet containing the INIT chunk was
sent from.
If the UDP encapsulation for destination address is currently disabled,
0 is used.</t>
<t hangText='New Encapsulation Port: 2 bytes (unsigned integer)'>
<vspace blankLines='0'/>
If the received SCTP packet containing the INIT chunk is encapsulated in UDP,
this field holds the UDP source port number of the UDP packet.
If the received SCTP packet is not encapsulated in UDP,
this field is 0.</t>
</list>
All transported integer numbers are in "network byte order" a.k.a.,
Big Endian.</t>
</section>

<section title='IANA Considerations'>

<t>[NOTE to RFC-Editor:
<list>
<t>"RFCXXXX" is to be replaced by the RFC number you assign this document.</t>
</list>
]</t>
<t>[NOTE to RFC-Editor:
<list>
<t>The suggested value for the error cause code is tentative and to be
confirmed by IANA.</t>
</list>
]</t>
<t>This document (RFCXXXX) is the reference for the registration
described in this section.</t>
<t>A new error cause code has to be assigned by IANA.
This requires an additional line in the "Error Cause Codes" registry for
SCTP:</t>
<figure>
<artwork>
Error Cause Codes

Value    Cause Code                                            Reference
-----    ----------                                            ---------
14       Restart of an Association with New Encapsulation Port [RFCXXXX]
</artwork>
</figure>
</section>

<section title='Security Considerations'>
<t>This document does not change the considerations given in
<xref target="RFC6951"/>.</t>
<t>However, not following the procedures given in this document might allow
an attacker to take over SCTP associations. The attacker needs only to
share the IP address of an existing SCTP association.</t>
</section>

<section title="Acknowledgments">
<t>The authors wish to thank Georgios Papastergiou for an initial
problem report.</t>
<t>The authors wish to thank
Irene Ruengeler and
Felix Weinrank
for their invaluable comments.</t>
<t>This work has received funding from the European Union's Horizon 2020
research and innovation programme under grant agreement No. 644334 (NEAT).
The views expressed are solely those of the author(s).</t>
</section>

</middle>

<back>
<references title='Normative References'>
<?rfc include="reference.RFC.2119" ?>
<?rfc include="reference.RFC.4960" ?>
<?rfc include="reference.RFC.6951" ?>
</references>
</back>
</rfc>
